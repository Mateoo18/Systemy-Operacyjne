zad3-sygnaly
katalog zawiera 3 pliki .c odpowiednio podpunkty zad2a-a zad2b-b zad2c-c. 

1-zadanie pierwsze to program, który pozwala na obsługę sygnałów - można ustawić domyślną akcję dla sygnału, ignorowanie go lub przechwycenie i wypisanie numeru sygnału. Program posiada zabezpieczenie przed błędem obsłużenia sygnału.

2-drugie to program, który zostaje rozdzielony na proces macierzysty i potomny - w procesie potomnym uruchamia program z poprzedniego zadania,
    a z procsu macierzystego wysyła do niego sygnał podany przez użytkownika za pomocą funkcji kill(). Program posiada zabezpieczenie przed wysłaniem
    sygnału do nieistniejącego procesu - sprawdza to za pomocą wywołania kill z drugim parametrem jako 0 i sprawdzeniem czy errno != ESRCH.

3-zadanie trzecie to program, który wywołuje grupę procesów analogicznie podobnie jak procesy.c z poprzedniego zestawu i wysyła sygnał do całej grupy
    procesów. Program posiada takie samo zabezpieczenie jak poprzedni przed wysłaniem sygnału do nieistniejącego procesu. Oprócz tego za pomocą funkcji
    signal() zabezpieczony został proces macierzysty przed reakcją na sygnał wysłany do całej grupy. 
    
Programy mozemy skompilowac za pomoca wpisania do terminalu gcc [nazwa pliku] a nastepnie ./a.out
[symbol] [numeru sygnalu]
gdzie symbole odpowiadaja rzeczy ktora chcemy zrobic z sygnalem
d - domyslny
i- ignorowac sygnal
p- wlasne przechwycenie sygnalu
np. ./a.out d 7
